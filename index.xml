<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Figaro ZP</title>
    <link>https://z-figaro.github.io/</link>
    <description>Recent content on Figaro ZP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights by figaro zp.</copyright>
    <lastBuildDate>Sun, 14 Apr 2019 15:52:51 +0800</lastBuildDate>
    
	<atom:link href="https://z-figaro.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于996的思考</title>
      <link>https://z-figaro.github.io/dailynote/%E5%85%B3%E4%BA%8E996%E7%9A%84%E6%80%9D%E8%80%83/</link>
      <pubDate>Sun, 14 Apr 2019 15:52:51 +0800</pubDate>
      
      <guid>https://z-figaro.github.io/dailynote/%E5%85%B3%E4%BA%8E996%E7%9A%84%E6%80%9D%E8%80%83/</guid>
      <description>资本的力量已经露出了爪牙，我们中国前20年的口号和标语完全作废；依法治国也变成了一场笑谈。 因为计划生育的错误国策，中国人口结构老龄化已经是摆</description>
    </item>
    
    <item>
      <title>未来</title>
      <link>https://z-figaro.github.io/dailynote/%E6%9C%AA%E6%9D%A5/</link>
      <pubDate>Fri, 12 Apr 2019 23:55:41 +0800</pubDate>
      
      <guid>https://z-figaro.github.io/dailynote/%E6%9C%AA%E6%9D%A5/</guid>
      <description>认知的重塑，将会是现在这个时代的最紧迫的事情。今天，我们面对很多的新词汇，新行业；感觉到时代的变化的变化是如此的快。是因为我们在时代积累的错</description>
    </item>
    
    <item>
      <title>Git子模块使用</title>
      <link>https://z-figaro.github.io/dailynote/git%E5%AD%90%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 08 Apr 2019 14:27:07 +0800</pubDate>
      
      <guid>https://z-figaro.github.io/dailynote/git%E5%AD%90%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8/</guid>
      <description>使用场景 我的blog是使用的hugo创建，其中的主题，我是直接网上找的。这个主题本身也是一个gh上的项目。我如何直接用git同时管理我们的B</description>
    </item>
    
    <item>
      <title> Attribute 实现系统代码提示</title>
      <link>https://z-figaro.github.io/ios/-attribute-%E5%AE%9E%E7%8E%B0%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E6%8F%90%E7%A4%BA/</link>
      <pubDate>Wed, 03 Apr 2019 16:55:07 +0800</pubDate>
      
      <guid>https://z-figaro.github.io/ios/-attribute-%E5%AE%9E%E7%8E%B0%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E6%8F%90%E7%A4%BA/</guid>
      <description>资料放在最前面，方便同学查询。 官方文档 matt大神 attribute是GNU C特色之一,在iOS用的比较广泛.系统中有许多地方使用到. att</description>
    </item>
    
    <item>
      <title>Block使用详解</title>
      <link>https://z-figaro.github.io/ios/block%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 02 Apr 2019 11:26:34 +0800</pubDate>
      
      <guid>https://z-figaro.github.io/ios/block%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</guid>
      <description>Block本质 通过LLVM的编译器-rt子项目存储库中找到runtime下的Block源码 struct Block_layout { void *isa; int flags; int reserved; void (*invoke)(void *, ...); struct Block_descriptor *descriptor; /* Imported variables. */ }; 我们实现</description>
    </item>
    
    <item>
      <title>Xcode中如何使用断点</title>
      <link>https://z-figaro.github.io/ios/xcode%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%96%AD%E7%82%B9/</link>
      <pubDate>Thu, 21 Mar 2019 13:34:06 +0800</pubDate>
      
      <guid>https://z-figaro.github.io/ios/xcode%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%96%AD%E7%82%B9/</guid>
      <description>断点调试 断点使用是我们开发提高效率，解决问题的不二法门；能够清楚的使用断点调试技巧，是基本技能。 edit breakpoint 编辑断点 reveal in breakpoint navigator 断点导航器 这就是我们的两</description>
    </item>
    
    <item>
      <title>Go基础——锁</title>
      <link>https://z-figaro.github.io/golangnote/go%E5%9F%BA%E7%A1%80%E9%94%81/</link>
      <pubDate>Thu, 21 Mar 2019 13:33:16 +0800</pubDate>
      
      <guid>https://z-figaro.github.io/golangnote/go%E5%9F%BA%E7%A1%80%E9%94%81/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Go基础——Map</title>
      <link>https://z-figaro.github.io/golangnote/go%E5%9F%BA%E7%A1%80map/</link>
      <pubDate>Wed, 20 Mar 2019 15:01:57 +0800</pubDate>
      
      <guid>https://z-figaro.github.io/golangnote/go%E5%9F%BA%E7%A1%80map/</guid>
      <description>Map 在iOS中叫字典，就是key-value结构的数据 声明方式： var map1 map[k-type]v-type 声明不分配内存空间 map是无序的</description>
    </item>
    
    <item>
      <title>Go基础——字符串</title>
      <link>https://z-figaro.github.io/golangnote/go%E5%9F%BA%E7%A1%80%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Tue, 19 Mar 2019 17:52:25 +0800</pubDate>
      
      <guid>https://z-figaro.github.io/golangnote/go%E5%9F%BA%E7%A1%80%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>字符串 字符串本身是一个byte数组 go语言中的字符有两种类型： 1. uint8类型或者叫byte类型，代表ASCII码的一个字符 2. rune类型，</description>
    </item>
    
    <item>
      <title>Go基础——切片slice</title>
      <link>https://z-figaro.github.io/golangnote/go%E5%9F%BA%E7%A1%80%E5%88%87%E7%89%87slice/</link>
      <pubDate>Tue, 19 Mar 2019 11:20:16 +0800</pubDate>
      
      <guid>https://z-figaro.github.io/golangnote/go%E5%9F%BA%E7%A1%80%E5%88%87%E7%89%87slice/</guid>
      <description>slice切片 切片是对数组的抽象。它的数据结构是： 切片从图中可以看出： 1. 指向数组的指针 2. 切片的长度 len 3. 切片的容量 cap 切片的声明 s := make([]byte,lense&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;) 例如： s:= make([]int,10)</description>
    </item>
    
  </channel>
</rss>