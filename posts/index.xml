<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Figaro ZP</title>
		<link>https://z-figaro.github.io/posts/</link>
		<description>Recent content in Posts on Figaro ZP</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>All rights by figaro zp.</copyright>
		<lastBuildDate>Tue, 18 Dec 2018 17:14:28 +0800</lastBuildDate>
		<atom:link href="https://z-figaro.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Hugo搭建网站</title>
			<link>https://z-figaro.github.io/posts/hugo%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/</link>
			<pubDate>Tue, 18 Dec 2018 17:14:28 +0800</pubDate>
			
			<guid>https://z-figaro.github.io/posts/hugo%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/</guid>
			<description>我用了很多博客框架，最后还是选择了go语言开发的hugo。不管速度还是简单程度都完全不一样。 搭建流程： 以下是使用流程和心得，如果时间过久应该</description>
			<content type="html"><![CDATA[

<p>我用了很多博客框架，最后还是选择了go语言开发的hugo。不管速度还是简单程度都完全不一样。
  <!-- more --></p>

<h2 id="搭建流程">搭建流程：</h2>

<p>以下是使用流程和心得，如果时间过久应该以<a href="https://gohugo.io/documentation/" target="_blank">官方文档</a>为准。</p>

<h3 id="安装">安装：</h3>

<pre><code>使用brew安装hugo
</code></pre>

<blockquote>
<p>没有brew的话：</p>
</blockquote>

<pre><code>$ ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;
</code></pre>

<blockquote>
<p>安装hugo</p>
</blockquote>

<pre><code>$ brew new Hugo
</code></pre>

<h3 id="hugo使用">hugo使用：</h3>

<p>在你想存放网站的地方使用：</p>

<pre><code>$ hugo new site mysite
</code></pre>

<p>进入路径</p>

<pre><code>$ cd mysite
</code></pre>

<p>在该目录下面你可以看到这些文件</p>

<pre><code>#blog
#├── archetypes
#│   └── default.md
#├── config.toml
#├── content
#├── data
#├── layouts
#├── static
#└── themes
</code></pre>

<p>其中最关键的是config.toml,这是网站的配置文件。</p>

<ul>
<li>archetypes：包括内容类型，在创建新内容时自动生成内容的配置</li>
<li>content：包括网站内容，全部使用markdown格式</li>
<li>layouts：包括了网站的模版，决定内容如何呈现</li>
<li>static：包括了css, js, fonts, media等，决定网站的外观</li>
<li>themes: 网站主题文件</li>
</ul>

<p>你可以下载自己喜欢的主题，或者使用默认的。</p>

<p>主题使用submodule来git clone 是最方便的；也是官方建议的。</p>

<h3 id="安装主题">安装主题：</h3>

<p>在<a href="https://themes.gohugo.io/" target="_blank">官方地址</a>下载主题有两种clone方式。</p>

<p>可以直接cd到theme主题文件下</p>

<pre><code>git clone https://github.com/olOwOlo/hugo-theme-even themes/even
</code></pre>

<p>也可以添加到git的submodule中，如果做travis自动部署，或者对主题做了修改。那么这是首选的方式。</p>

<pre><code>git submodule add https://github.com/olOwOlo/hugo-theme-even.git themes/even
</code></pre>

<p>如果修改了主题，这个要根据每个主题文件不同的设置。有的需要在主题目录下重新build</p>

<pre><code>cd themes/even &amp;&amp; npm i &amp;&amp; npm start
</code></pre>

<h3 id="页面设置和发布文章">页面设置和发布文章</h3>

<p>如果你想根据主题设置网站page：</p>

<pre><code>hugo new xxxx.md
</code></pre>

<p>如果你想生成新文章：</p>

<pre><code>hugo new posts/my-first-post.md
</code></pre>

<h3 id="评论功能">评论功能：</h3>

<p>可以参考<a href="https://zh4ui.net/post/2017-04-20-hugo-with-disqus/" target="_blank">这篇文章</a></p>
]]></content>
		</item>
		
	</channel>
</rss>
